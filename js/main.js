const instructions = document.getElementById('instructions');
/**
 * Hide the instructions modal on page loading, if a user has already read it.
 */
const hideInstructions = () => {
  if (localStorage.getItem('instructions') === 'read') {
    instructions.style.display = 'none';
  }
};
window.onload = hideInstructions;
/**
 * Close the instructions modal on a user input.
 */
const closeInstructions = () => {
  instructions.style.opacity = '0';
  instructions.style.visibility = 'hidden';

  /**
   * Remember that a user has already read the instructions.
   */
  if (typeof(Storage) !== 'undefined') {
    localStorage.setItem('instructions', 'read');
  }
};
const closeInstructionsButton = document.getElementById('close-instructions');
closeInstructionsButton.addEventListener('click', closeInstructions, false);
/**
 *
 */
const gameWinner = () => {

};
/**
 *
 * @param {string} playerChoice • One of ‘rock’, ‘paper’, or ‘scissors’ chosen by the player.
 * @param {string} computerChoice • One of ‘rock’, ‘paper’, or ‘scissors’ randomly generated by the computer.
 */
const gamePlay = (playerChoice, computerChoice) => {
  if (playerChoice === computerChoice) {

  } else {

  }
};
/**
 * Generate a random string between ‘rock’, ‘paper’, and ‘scissors’.
 */
const computerPlay = () => {
  const computerChoices = ['rock', 'paper', 'scissors'];
  let computerChoice = computerChoices[Math.floor(Math.random() * computerChoices.length)];
  return computerChoice;
};

/**
 * Get the user choice between ‘rock’, ‘paper’, and ‘scissors’ from the clicked button and start a new game.
 */
const playerPlay = playerChoice => {
  gamePlay(playerChoice, computerPlay());
};
const playerChoices = document.querySelectorAll('#player button');
playerChoices.forEach(playerChoice => {
  playerChoice.addEventListener('click', event => {
    playerPlay(playerChoice.id);
  }, false);
});